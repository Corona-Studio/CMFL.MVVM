<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XC.RSAUtil</name>
    </assembly>
    <members>
        <member name="T:XC.RSAUtil.RsaKeyConvert">
            <summary>
            RSA Key Convert Class
            Author:Zhiqiang Li
            </summary>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyConvert.PublicKeyPemToXml(System.String)">
            <summary>
            Public Key Convert pem->xml
            </summary>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyConvert.PublicKeyXmlToPem(System.String)">
            <summary>
            Public Key Convert xml->pem
            </summary>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyConvert.PrivateKeyPkcs1ToXml(System.String)">
            <summary>
            Private Key Convert Pkcs1->xml
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyConvert.PrivateKeyXmlToPkcs1(System.String)">
            <summary>
            Private Key Convert xml->Pkcs1
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyConvert.PrivateKeyPkcs8ToXml(System.String)">
            <summary>
            Private Key Convert Pkcs8->xml
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyConvert.PrivateKeyXmlToPkcs8(System.String)">
            <summary>
            Private Key Convert xml->Pkcs8
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyConvert.PrivateKeyPkcs1ToPkcs8(System.String)">
            <summary>
            Private Key Convert Pkcs1->Pkcs8
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyConvert.PrivateKeyPkcs8ToPkcs1(System.String)">
            <summary>
            Private Key Convert Pkcs8->Pkcs1
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="T:XC.RSAUtil.RsaKeyGenerator">
            <summary>
             Rsa Key Generator
            Author:Zhiqiang Li
            </summary>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyGenerator.XmlKey(System.Int32)">
            <summary>
            Generate XML Format RSA Key. Result: Index 0 is the private key and index 1 is the public key
            </summary>
            <param name="keySize">Key Size.Unit: bits</param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyGenerator.Pkcs1Key(System.Int32,System.Boolean)">
            <summary>
            Generate RSA key in Pkcs1 format. Result: Index 0 is the private key and index 1 is the public key
            </summary>
            <param name="keySize">Key Size.Unit: bits</param>
            <param name="format">Whether the format is true If it is standard pem file format</param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaKeyGenerator.Pkcs8Key(System.Int32,System.Boolean)">
            <summary>
            Generate Pkcs8 format RSA key. Result: Index 0 is the private key and index 1 is the public key
            </summary>
            <param name="keySize">Key Size.Unit: bits</param>
            <param name="format">Whether the format is true If it is standard pem file format</param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaPemFormatHelper.Pkcs1PrivateKeyFormat(System.String)">
            <summary>
            Format Pkcs1 format private key
            Author:Zhiqiang Li
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaPemFormatHelper.Pkcs1PrivateKeyFormatRemove(System.String)">
            <summary>
            Remove the Pkcs1 format private key format
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaPemFormatHelper.Pkcs8PrivateKeyFormat(System.String)">
            <summary>
            Format Pkcs8 format private key
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaPemFormatHelper.Pkcs8PrivateKeyFormatRemove(System.String)">
            <summary>
            Remove the Pkcs8 format private key format
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaPemFormatHelper.PublicKeyFormat(System.String)">
            <summary>
            Format public key
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaPemFormatHelper.PublicKeyFormatRemove(System.String)">
            <summary>
            Public key format removed
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:XC.RSAUtil.RsaPkcs1Util">
            <summary>
            RSA pkcs1 format key helper class
            Author:Zhiqiang Li
            </summary>
        </member>
        <member name="M:XC.RSAUtil.RsaPkcs1Util.CreateRsapFromPublicKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format public key
            </summary>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaPkcs1Util.CreateRsapFromPrivateKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format private key
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="T:XC.RSAUtil.RsaPkcs8Util">
            <summary>
            RSA pkcs8 format key helper class
            Author:Zhiqiang Li
            </summary>
        </member>
        <member name="M:XC.RSAUtil.RsaPkcs8Util.CreateRsapFromPublicKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format public key
            </summary>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaPkcs8Util.CreateRsapFromPrivateKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format private key
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RSAUtilBase.Encrypt(System.String,System.Security.Cryptography.RSAEncryptionPadding)">
            <summary>
            RSA public key encryption
            </summary>
            <param name="data">Need to encrypt data</param>
            <param name="padding">Padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RSAUtilBase.EncryptBigData(System.String,System.Security.Cryptography.RSAEncryptionPadding,System.Char)">
            <summary>
            [Not recommended] RSA public key split encryption
            <para>RSA encryption does not support too large data. In this case, symmetric encryption should be used, and RSA is used to encrypt symmetrically encrypted passwords.</para>
            </summary>
            <param name="dataStr">Need to encrypt data</param>
            <param name="connChar">Encrypted result link character</param>
            <param name="padding">Padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RSAUtilBase.Decrypt(System.String,System.Security.Cryptography.RSAEncryptionPadding)">
            <summary>
            RSA private key  decrypted
            </summary>
            <param name="data">Need to decrypt the data</param>
            <param name="padding">Padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RSAUtilBase.DecryptBigData(System.String,System.Security.Cryptography.RSAEncryptionPadding,System.Char)">
            <summary>
            [Not recommended] RSA private key split decrypted
            <para>RSA encryption does not support too large data. In this case, symmetric encryption should be used, and RSA is used to encrypt symmetrically encrypted passwords.</para>
            </summary>
            <param name="connChar">Encrypted result link character</param>
            <param name="dataStr">Need to decrypt the data</param>
            <param name="padding">Padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RSAUtilBase.SignData(System.String,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
            <summary>
            Use private key for data signing
            </summary>
            <param name="data">Need to sign data</param>
            <param name="hashAlgorithmName">Signed hash algorithm name</param>
            <param name="padding">Signature padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RSAUtilBase.SignDataGetBytes(System.String,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
            <summary>
            Use private key for data signing
            </summary>
            <param name="data">Need to sign data</param>
            <param name="hashAlgorithmName">Signed hash algorithm name</param>
            <param name="padding">Signature padding algorithm</param>
            <returns>Sign bytes</returns>
        </member>
        <member name="M:XC.RSAUtil.RSAUtilBase.VerifyData(System.String,System.String,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
            <summary>
            Use public key to verify data signature
            </summary>
            <param name="data">Need to verify the signature data</param>
            <param name="sign">sign</param>
            <param name="hashAlgorithmName">Signed hash algorithm name</param>
            <param name="padding">Signature padding algorithm</param>
            <returns></returns>
        </member>
        <member name="T:XC.RSAUtil.RsaXmlUtil">
            <summary>
            .net core xml format The RSA key helper classes are compatible with the xml formatted keys used by the .NET Framework
            Author:Zhiqiang Li
            CreateDate:2018-1-5
            </summary>
        </member>
        <member name="M:XC.RSAUtil.RsaXmlUtil.#ctor(System.Text.Encoding,System.String,System.String,System.Int32)">
            <summary>
            RSA encryption
            SHA256 hash algorithm to use the key length of at least 2048
            </summary>
            <param name="dataEncoding">Data coding</param>
            <param name="keySize">Key length in bits:</param>
            <param name="privateKey">private Key</param>
            <param name="publicKey">public Key</param>
        </member>
        <member name="M:XC.RSAUtil.RsaXmlUtil.CreateRsapFromPrivateKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format private key
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:XC.RSAUtil.RsaXmlUtil.CreateRsapFromPublicKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format public key
            </summary>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
    </members>
</doc>
